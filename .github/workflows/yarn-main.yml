name: Node Collector Webclient - Main Workflow
run-name: ${{ github.actor }} is Collecting Nodi-nessðŸš€
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 1" # Update weekly on Monday Midnight
  workflow_dispatch:

jobs:
  Setup:
    runs-on: ubuntu-latest
    outputs:
      Date: ${{ steps.date.outputs.date }}
      v18:  ${{ steps.v.outputs.v18 }}
      v20:  ${{ steps.v.outputs.v20 }}
      v22:  ${{ steps.v.outputs.v22 }}
    steps:
      - name: Get current date
        id: DATE
        run: |
          echo "Getting Date"
          echo "DATE=$(date '+%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo -e "\nFile:\n$GITHUB_OUTPUT"
          echo "Values:"
          cat $GITHUB_OUTPUT

      - name: Get current node versions
        id: v
        run: |
          echo -e "\nGetting versions"
          echo "v18=$(curl -s https://nodejs.org/dist/latest-v18.x/ | grep -oP 'v18\.\d+\.\d+' | head -1)" >> $GITHUB_OUTPUT
          echo "v20=$(curl -s https://nodejs.org/dist/latest-v20.x/ | grep -oP 'v20\.\d+\.\d+' | head -1)" >> $GITHUB_OUTPUT
          echo "v22=$(curl -s https://nodejs.org/dist/latest-v22.x/ | grep -oP 'v22\.\d+\.\d+' | head -1)" >> $GITHUB_OUTPUT
          echo -e "\nFile:\n$GITHUB_OUTPUT"
          echo "Values:"
          cat $GITHUB_OUTPUT

  Collect:
    runs-on: ubuntu-latest
    needs: [Setup]

    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ vars.NODE_VER }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VER }}
          cache: "npm"

      - name: Set up git
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"

      - name: Run yarn with verdaccio
        run: |
          sudo corepack enable
          yarn dlx verdaccio &
          sleep 12
          npm set registry http://localhost:4873/
          yarn config set npmRegistryServer http://localhost:4873/
          echo -e "\nChecking Connectivity\n"
          curl http://localhost:4873 -o test.html
          sleep 1
          echo -e "\nRunning Yarn"
          yarn install
          echo -e "\nListing ~/.local/share/verdaccio/*"
          ls -Alht ~/.local/share/verdaccio/*

      - name: TARchive verdaccio storage directory
        run: |
          ls -Alht ~/.local/share/verdaccio/storage
          tar -cvzf verdaccio-${{ needs.Setup.outputs.Date }}.tgz \
            -C ~/.local/share/verdaccio storage \
            | tee verdaccio-${{ needs.Setup.outputs.Date }}.tgz.txt

      - name: TARchive node_modules directory
        run: |
          ls -lAhS ${{ github.workspace }}
          tar -cvzf node-modules-${{ needs.Setup.outputs.Date }}.tgz \
            node_modules yarn.lock \
            | tee node-modules-${{ needs.Setup.outputs.Date }}.tgz.txt

      - name: TARchive yarn cache directory
        run: |
          ls -lAhS ${{ github.workspace }}
          tar -cvzf yarn-cache-${{ needs.Setup.outputs.Date }}.tgz \
            .yarn yarn.lock \
            | tee yarn-cache-${{ needs.Setup.outputs.Date }}.tgz.txt

      - name: Upload verdaccio artifact
        uses: actions/upload-artifact@v4
        with:
          name: verdaccio-${{ needs.Setup.outputs.Date }}.tgz
          path: verdaccio-${{ needs.Setup.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload verdaccio ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: verdaccio-${{ needs.Setup.outputs.Date }}.tgz.txt
          path: verdaccio-${{ needs.Setup.outputs.Date }}.tgz.txt
          if-no-files-found: error

      - name: Upload cache artifact
        uses: actions/upload-artifact@v4
        with:
          name: yarn-cache-${{ needs.Setup.outputs.Date }}.tgz
          path: yarn-cache-${{ needs.Setup.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload cache ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: yarn-cache-${{ needs.Setup.outputs.Date }}.tgz.txt
          path: yarn-cache-${{ needs.Setup.outputs.Date }}.tgz.txt
          if-no-files-found: error

      - name: Upload modules artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-${{ needs.Setup.outputs.Date }}.tgz
          path: node-modules-${{ needs.Setup.outputs.Date }}.tgz
          if-no-files-found: error

      - name: Upload modules ToC artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-modules-${{ needs.Setup.outputs.Date }}.tgz.txt
          path: node-modules-${{ needs.Setup.outputs.Date }}.tgz.txt
          if-no-files-found: error

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      #- name: Update dependency graph
      #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  # DiffTOC:
  #   runs-on: ubuntu-latest
  #   needs: [Date, Collect]
  #   permissions:
  #     contents: write
  #     pull-requests: read
  #   steps:
  #     - name: Download ToC txt files
  #       uses: actions/download-artifact@v4
  #       with:
  #         pattern: "*.txt"
  #         merge-multiple: true

  #     - name: Diff ToC results
  #       run: |
  #         echo -e "Diff results for 18 to 20"
  #         echo -e "Diff yarn-cache"
  #         diff -yad --suppress-blank-empty --suppress-common-lines \
  #           yarn-cache-18*.txt yarn-cache-20*.txt
  #         echo -e "Diff node-modules"
  #         diff -yad --suppress-blank-empty --suppress-common-lines \
  #           node-modules-18*.txt node-modules-20*.txt
  #         echo -e "Diff verdaccio"
  #         diff -yad --suppress-blank-empty --suppress-common-lines \
  #           verdaccio-18*.txt verdaccio-20*.txt
  #         echo -e "\nDiff results for 18 to 22"
  #         echo -e "Diff yarn-cache"
  #         diff -yad --suppress-blank-empty --suppress-common-lines \
  #           yarn-cache-18*.txt yarn-cache-20*.txt
  #         echo -e "Diff node-modules"
  #         diff -yad --suppress-blank-empty --suppress-common-lines \
  #           node-modules-18*.txt node-modules-20*.txt
  #         echo -e "Diff verdaccio"
  #         diff -yad --suppress-blank-empty --suppress-common-lines \
  #           verdaccio-18*.txt verdaccio-22*.txt
  #         echo -e "\nDiff results for 20 to 22"
  #         echo -e "Diff yarn-cache"
  #         diff -yad --suppress-blank-empty --suppress-common-lines \
  #           yarn-cache-20*.txt yarn-cache-22*.txt
  #         echo -e "Diff node-modules"
  #         diff -yad --suppress-blank-empty --suppress-common-lines \
  #           node-modules-20*.txt node-modules-22*.txt
  #         echo -e "Diff verdaccio"
  #         diff -yad --suppress-blank-empty --suppress-common-lines \
  #           verdaccio-20*.txt verdaccio-22*.txt

  MakeISO:
    runs-on: ubuntu-latest
    needs: [Setup, Collect]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Install mkisofs
        run: |
          sudo apt-get update -y
          sudo apt-get install -y mkisofs isomd5sum wget

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ISO

      - name: Download Node Installers
        run: |
          echo -e "\nDownloading installers\n"
          mkdir -p ISO/runtimes
          cd ISO/runtimes
          wget -nv https://nodejs.org/dist/latest-v18.x/node-${{ needs.Setup.outputs.v18 }}-x64.msi
          wget -nv https://nodejs.org/dist/latest-v20.x/node-${{ needs.Setup.outputs.v20 }}-x64.msi
          wget -nv https://nodejs.org/dist/latest-v22.x/node-${{ needs.Setup.outputs.v22 }}-x64.msi
          wget -nv https://nodejs.org/dist/latest-v18.x/node-${{ needs.Setup.outputs.v18 }}-win-x64.zip
          wget -nv https://nodejs.org/dist/latest-v20.x/node-${{ needs.Setup.outputs.v20 }}-win-x64.zip
          wget -nv https://nodejs.org/dist/latest-v22.x/node-${{ needs.Setup.outputs.v22 }}-win-x64.zip
          wget -nv https://nodejs.org/dist/latest-v18.x/node-${{ needs.Setup.outputs.v18 }}-linux-x64.tar.xz
          wget -nv https://nodejs.org/dist/latest-v20.x/node-${{ needs.Setup.outputs.v20 }}-linux-x64.tar.xz
          wget -nv https://nodejs.org/dist/latest-v22.x/node-${{ needs.Setup.outputs.v22 }}-linux-x64.tar.xz

      - name: Copy Markdowns to ISO
        run: cp -v *.md ISO/

      - name: Show Artifacts
        run: ls -alh ISO/*tgz*

      - name: Make ISO
        run: |
          mkisofs -J -R -v -T -l \
            -V '${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}' \
            -A '${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}' \
            -o ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso \
            ISO

      - name: Implant MD5 sum into iso
        run: implantisomd5 ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso

      - name: Generate Hash
        run: |
          sha256sum -b ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso >>\
            ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso.sha
          cat ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso.sha

      - name: Show ISO & Hash
        run: ls -alh *.iso*

      - name: Upload iso artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso
          path: ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso
          if-no-files-found: error

      - name: Upload iso sha artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso.sha
          path: ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso.sha
          if-no-files-found: error

  OfflineTest:
    runs-on: ubuntu-latest
    needs: [Setup, MakeISO]
    permissions:
      contents: write
      pull-requests: read
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Install isomd5sum
        run: |
          sudo apt-get update -y
          sudo apt-get install -y isomd5sum

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download ISO and hash
        uses: actions/download-artifact@v4
        with:
          pattern: "${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso*"
          merge-multiple: true

      - name: Validate Hashes
        run: |
          echo -e "List Artifacts"
          ls -Alht
          echo -e "\nCheck injected ISO MD5"
          checkisomd5 ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso
          echo -e "\nCheck ISO sha256"
          sha256sum -cw ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso.sha

      - name: Mount ISO
        run: sudo mount -v -o loop ${{ vars.COLLECTOR }}-${{ needs.Setup.outputs.Date }}.iso /mnt

      - name: UnTARchive Yarn Cache
        run: tar -xzvf /mnt/yarn-cache-${{ needs.Setup.outputs.Date }}.tgz

      - name: Run yarn install
        run: |
          echo -e "Setup Yarn"
          sudo corepack enable
          echo -e "Configure Yarn for inaccessable network"
          npm set registry http://localhost:4873/
          yarn config set npmRegistryServer http://localhost:4873/
          echo -e "\nRun yarn install --immutable\n"
          yarn install --immutable

      - name: Run yarn
        run: |
          echo -e "Run Yarn"
          yarn run

  Release:
    runs-on: ubuntu-latest
    needs: [Setup, OfflineTest]
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -lh *tgz* *iso*

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        id: tag_create
        with:
          tag: ${{ needs.Setup.outputs.Date }}
          github_token: ${{secrets.GITHUB_TOKEN}}
          tag_exists_error: false
          message: "Release for node-modules ${{ needs.Setup.outputs.Date }} run"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Node Collection ${{ needs.Setup.outputs.Date }}
          tag_name: ${{ needs.Setup.outputs.Date }}
          make_latest: true
          files: |
            *.tgz
            *.zip
            *.txt
            *.iso
            *.sha

  Sharepoint:
    runs-on: ubuntu-latest
    needs: [Setup, OfflineTest]
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Show Artifacts
        run: ls -lh *tgz* *iso*

      - name: Send Files to Sharepoint
        uses: JacobsFederal/sharepoint-file-upload-action@pappasjfed-patch-1
        with:
          file_path: "*tgz*"
          host_name: "jacobsfederal.sharepoint.us"
          site_name: "USCMSNISSCII.DSO"
          upload_path: "${{ vars.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/${{ needs.Setup.outputs.Date }}"
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: "login.microsoftonline.us"
          graph_endpoint: "graph.microsoft.us"

      - name: Send ISO to Sharepoint
        uses: JacobsFederal/sharepoint-file-upload-action@pappasjfed-patch-1
        with:
          file_path: "*.iso*"
          host_name: "jacobsfederal.sharepoint.us"
          site_name: "USCMSNISSCII.DSO"
          upload_path: "${{ vars.SHAREPOINT_BASEPATH }}/${{ vars.COLLECTOR }}/"
          tenant_id: ${{ secrets.SHAREPOINT_TENANT_ID }}
          client_id: ${{ secrets.SHAREPOINT_APP_ID }}
          client_secret: ${{ secrets.SHAREPOINT_APP_SECRET }}
          login_endpoint: "login.microsoftonline.us"
          graph_endpoint: "graph.microsoft.us"
